buildscript {

    repositories {
        mavenLocal()
        maven{
            url "http://artifactory.nm.flipkart.com:8081/artifactory/libs-releases"
        }
        maven {
            url 'http://repo.jenkins-ci.org/releases/'
        }

        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE")
        classpath("com.netflix.nebula:gradle-ospackage-plugin:3.2.1")
        classpath("net.saliman:gradle-cobertura-plugin:2.3.0")
        classpath("org.hidetake:gradle-ssh-plugin:2.0.0")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:1.2")
        classpath("com.terrafolio:gradle-jenkins-plugin:1.3.2")
    }
}

repositories {
    maven{
        url "http://artifactory.nm.flipkart.com:8081/artifactory/libs-releases"
    }
}

apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: "org.sonarqube"
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'com.terrafolio.jenkins'



//NOTE: version has to be specified after "apply plugin: 'java'"
version = '1.0.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

// NOTE: These files have to be included after setting some basic
// properties. Otherwise, any references to those properties
// will be null
apply from: 'common.gradle'
apply from: 'test.gradle'
apply from: 'quality.gradle'
apply from: 'packaging.gradle'


mainClassName = "com.ekart.sample.apis.Application"

ext {
    springBootVersion = '1.3.1.RELEASE'
    jacksonVersion = '2.6.4'
    dropWizardMetricsVersion = '3.1.2'
}

dependencies {
    // Spring dependencies
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-jetty:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-aop:$springBootVersion")
    
    compile("org.eclipse.jetty:jetty-jmx:9.2.14.v20151106")

    //Jackson
    compile("com.fasterxml.jackson.core:jackson-core:$jacksonVersion")
    compile("com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion")
    compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")

    // Using sfl4j allows us to replace different loggers later, if desired
    compile("org.slf4j:slf4j-api:1.7.12")
    compile("ch.qos.logback:logback-classic:1.1.3")
    compile("ch.qos.logback:logback-core:1.1.3")
    
    compile("io.springfox:springfox-swagger2:2.3.1")
    compile("io.springfox:springfox-swagger-ui:2.3.1")
    
    compile("com.google.guava:guava:18.0")
    compile("com.google.code.findbugs:jsr305:3.0.1")
    compile("com.google.code.findbugs:annotations:3.0.1")
    
    compile("org.apache.commons:commons-collections4:4.1")

    compile("io.dropwizard.metrics:metrics-core:$dropWizardMetricsVersion")
    compile("io.dropwizard.metrics:metrics-jersey2:$dropWizardMetricsVersion")
    compile("io.dropwizard.metrics:metrics-jvm:$dropWizardMetricsVersion")
    compile("io.dropwizard.metrics:metrics-jetty9:$dropWizardMetricsVersion")
    compile("io.dropwizard.metrics:metrics-logback:$dropWizardMetricsVersion")
    compile("com.ryantenney.metrics:metrics-spring:$dropWizardMetricsVersion")
    compile('com.readytalk:metrics3-statsd:4.1.0')
    
    compile("org.glassfish.jersey.ext:jersey-bean-validation:2.22.1")
    
    compile("org.springframework.cloud:spring-cloud-sleuth-zipkin:1.0.0.M4")
}

configurations.all {
    exclude group: 'commons-logging'
    exclude group: 'org.apache.tomcat'
}

configurations {
    compile.exclude module: 'spring-boot-starter-tomcat'
    compile.exclude group: 'org.eclipse.jetty.websocket'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

apply from: 'bootRunDefaults.gradle'
